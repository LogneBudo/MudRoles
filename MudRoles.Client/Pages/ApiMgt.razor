@page "/apikeys"
@inject HttpClient HttpClient
@attribute [Authorize]
<PageTitle>Api Management</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">API Management</MudText>

<AuthorizeView>
    <MudText Class="mb-4">Hello @context.User.Identity?.Name!</MudText>
</AuthorizeView>

<MudButton @onclick="DoSomething">Get API Keys</MudButton>

@code {
    private List<ApiKey> userApiKeys = new();

    private string authMessage = "The user is NOT authenticated.";

    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private async Task DoSomething()
    {
        if (authenticationState is not null)
        {
            var authState = await authenticationState;
            var user = authState?.User;

            if (user is not null)
            {
                if (user.Identity is not null && user.Identity.IsAuthenticated)
                {
                    // ...
                }

                if (user.IsInRole("Admin"))
                {
                    // ...
                }

            }
        }
    }
    
    private async Task LoadApiKeys()
    {
        var KeysResponse = await HttpClient.GetFromJsonAsync<List<ApiKey>>("api/apikeys");
    }
}
